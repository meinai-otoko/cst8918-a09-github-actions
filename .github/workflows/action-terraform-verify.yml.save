name: Validate Terraform Code

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

permissions:
  id-token: write
  contents: read

jobs:
  terraform-format:
    runs-on: ubuntu-latest
    name: Terraform Format Check
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      
      - name: Fetch Changed Files
        id: pr_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "space-delimited"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      - name: Validate Terraform Formatting (fmt)
        run: |
          set +e
          CHECK_STATUS=0
          for changed_file in ${{ steps.pr_files.outputs.added_modified }}; do
            if [[ $changed_file == *.tf ]]; then
              terraform fmt -check $changed_file || CHECK_STATUS=1
            fi
          done
          echo "CHECK_STATUS=$CHECK_STATUS" >> $GITHUB_ENV

      - name: Fail if Formatting Issues Found
        run: |
          if [[ "$CHECK_STATUS" -ne 0 ]]; then
            echo "‚ùå Terraform formatting failed!"
            exit 1
          fi

  terraform-validate:
    runs-on: ubuntu-latest
    name: Terraform Validate Check
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate
